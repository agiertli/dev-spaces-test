schemaVersion: 2.1.0
metadata:
  name: sample-java-devfile
events:
  preStart:
    - init-container-command  
components:
  - attributes:
      app.kubernetes.io/component: che-code-runtime
      app.kubernetes.io/part-of: che-code.eclipse.org
    container:
      cpuRequest: 30m
      command:
        - /checode/entrypoint-volume.sh
      env:
        - name: CHE_DASHBOARD_URL
          value: 'https://devspaces.apps.cluster-jgfww.jgfww.sandbox1880.opentlc.com'
        - name: CHE_PLUGIN_REGISTRY_URL
          value: >-
            https://devspaces.apps.cluster-jgfww.jgfww.sandbox1880.opentlc.com/plugin-registry/v3
        - name: CHE_PLUGIN_REGISTRY_INTERNAL_URL
          value: 'http://plugin-registry.devspaces.svc:8080/v3'
      memoryRequest: 256Mi
      sourceMapping: /projects
      cpuLimit: 500m
      volumeMounts:
        - name: checode
          path: /checode
      memoryLimit: 1024Mi
      image: >-
        registry.redhat.io/devspaces/udi-rhel8@sha256:72762feb5ccea26dc7872877b9661fb34a295da05b96581d364c507a4923361e
      endpoints:
        - attributes:
            cookiesAuthEnabled: true
            discoverable: false
            type: main
            urlRewriteSupported: true
          exposure: public
          name: che-code
          path: '?tkn=eclipse-che'
          protocol: https
          secure: false
          targetPort: 3100
        - attributes:
            discoverable: false
            urlRewriteSupported: true
          exposure: public
          name: code-redirect-1
          protocol: http
          targetPort: 13131
        - attributes:
            discoverable: false
            urlRewriteSupported: true
          exposure: public
          name: code-redirect-2
          protocol: http
          targetPort: 13132
        - attributes:
            discoverable: false
            urlRewriteSupported: true
          exposure: public
          name: code-redirect-3
          protocol: http
          targetPort: 13133
    name: che-code-runtime-description
  - name: checode
    volume: {}
  - container:
      cpuRequest: 30m
      command:
        - /entrypoint-init-container.sh
      env:
        - name: CHE_DASHBOARD_URL
          value: 'https://devspaces.apps.cluster-jgfww.jgfww.sandbox1880.opentlc.com'
        - name: CHE_PLUGIN_REGISTRY_URL
          value: >-
            https://devspaces.apps.cluster-jgfww.jgfww.sandbox1880.opentlc.com/plugin-registry/v3
        - name: CHE_PLUGIN_REGISTRY_INTERNAL_URL
          value: 'http://plugin-registry.devspaces.svc:8080/v3'
      memoryRequest: 32Mi
      sourceMapping: /projects
      cpuLimit: 500m
      volumeMounts:
        - name: checode
          path: /checode
      memoryLimit: 128Mi
      image: >-
        registry.redhat.io/devspaces/code-rhel8@sha256:42da1996453b6594233a5772473a88f32c5c52191899c05b99032a70ce459534
    name: che-code-injector
  - name: tools
    container:
      image: registry.redhat.io/devspaces/udi-rhel8:3.2-26
      memoryLimit: 3Gi
      endpoints:
        - exposure: public
          name: http-booster
          protocol: http
          targetPort: 8080
        - exposure: internal
          name: debug
          protocol: http
          targetPort: 5005
      volumeMounts:
        - name: m2
          path: /home/user/.m2
  - name: m2
    volume:
      size: 1G
commands:
  - apply:
      component: che-code-injector
    id: init-container-command
  - id: 1-build
    exec:
      component: tools
      workingDir: ${PROJECT_SOURCE}
      commandLine: mvn -DskipTests clean install
      group:
        kind: build
  - id: 2-run
    exec:
      component: tools
      workingDir: ${PROJECT_SOURCE}
      commandLine: mvn spring-boot:run
      group:
        kind: run
  - id: 3-run-in-debug
    exec:
      component: tools
      workingDir: ${PROJECT_SOURCE}
      commandLine: >-
          mvn spring-boot:run -Dspring-boot.run.jvmArguments="-Xdebug
          -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005"
      group:
        kind: run
  - id: 4-run-tests
    exec:
      component: tools
      workingDir: ${PROJECT_SOURCE}
      commandLine: mvn verify
      group:
        kind: test
  - id: 5-log-into-cluster
    exec:
      component: tools
      workingDir: ${PROJECT_SOURCE}
      commandLine: |
          echo
          echo "You are already logged in to the current cluster. However, if you want"
          echo "to deploy this application to a different OpenShift cluster, you must"
          echo "run 'oc login ...' in the tools terminal."
          echo
      group:
        kind: run
  - id: 6-deploy-to-openshift
    exec:
      component: tools
      workingDir: ${PROJECT_SOURCE}
      commandLine: oc project $DEVWORKSPACE_NAMESPACE && mvn fabric8:deploy -Popenshift -DskipTests
      group:
        kind: run
